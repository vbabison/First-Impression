{"ast":null,"code":"var _jsxFileName = \"/Users/bobby/Desktop/Impressions/First-Impression/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport Peer from \"simple-peer\";\nimport io from \"socket.io-client\";\nimport \"./App.css\";\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect('http://localhost:5000');\n\nfunction App() {\n  _s();\n\n  const [me, setMe] = useState(\"\");\n  const [stream, setStream] = useState();\n  const [receivingCall, setReceivingCall] = useState(false);\n  const [caller, setCaller] = useState(\"\");\n  const [callerSignal, setCallerSignal] = useState();\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [idToCall, setIdToCall] = useState(\"\");\n  const [callEnded, setCallEnded] = useState(false);\n  const [name, setName] = useState(\"\");\n  const myVideo = useRef();\n  const userVideo = useRef();\n  const connectionRef = useRef();\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      setStream(stream);\n      myVideo.current.srcObject = stream;\n    });\n    socket.on(\"me\", id => {\n      setMe(id);\n    });\n    socket.on(\"callUser\", data => {\n      setReceivingCall(true);\n      setCaller(data.from);\n      setName(data.name);\n      setCallerSignal(data.signal);\n    });\n  }, []);\n\n  const callUser = id => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream: stream\n    });\n    peer.on(\"signal\", data => {\n      socket.emit(\"callUser\", {\n        userToCall: id,\n        signalData: data,\n        from: me,\n        name: name\n      });\n    });\n    peer.on(\"stream\", stream => {\n      userVideo.current.srcObject = stream;\n    });\n    socket.on(\"callAccepted\", signal => {\n      setCallAccepted(true);\n      peer.signal(signal);\n    });\n    connectionRef.current = peer;\n  };\n\n  const answerCall = () => {\n    setCallAccepted(true);\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream: stream\n    });\n    peer.on(\"signal\", data => {\n      socket.emit(\"answerCall\", {\n        signal: data,\n        to: caller\n      });\n    });\n    peer.on(\"stream\", stream => {\n      userVideo.current.srcObject = stream;\n    });\n    peer.signal(callerSignal);\n    connectionRef.current = peer;\n  };\n\n  const leaveCall = () => {\n    setCallEnded(true);\n    connectionRef.current.destroy();\n  };\n\n  const history = useHistory();\n  return /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"Lt+Lf9ld/bD8qDLqHJo1eQF/vos=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/bobby/Desktop/Impressions/First-Impression/src/App.js"],"names":["Button","IconButton","TextField","AssignmentIcon","PhoneIcon","React","useEffect","useRef","useState","CopyToClipboard","Peer","io","useHistory","socket","connect","App","me","setMe","stream","setStream","receivingCall","setReceivingCall","caller","setCaller","callerSignal","setCallerSignal","callAccepted","setCallAccepted","idToCall","setIdToCall","callEnded","setCallEnded","name","setName","myVideo","userVideo","connectionRef","navigator","mediaDevices","getUserMedia","video","audio","then","current","srcObject","on","id","data","from","signal","callUser","peer","initiator","trickle","emit","userToCall","signalData","answerCall","to","leaveCall","destroy","history"],"mappings":"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","sourcesContent":["import Button from \"@material-ui/core/Button\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport TextField from \"@material-ui/core/TextField\"\nimport AssignmentIcon from \"@material-ui/icons/Assignment\"\nimport PhoneIcon from \"@material-ui/icons/Phone\"\nimport React, { useEffect, useRef, useState } from \"react\"\nimport { CopyToClipboard } from \"react-copy-to-clipboard\"\nimport Peer from \"simple-peer\"\nimport io from \"socket.io-client\"\nimport \"./App.css\"\nimport { useHistory } from 'react-router-dom'\n\nconst socket = io.connect('http://localhost:5000')\nfunction App() {\n\tconst [ me, setMe ] = useState(\"\")\n\tconst [ stream, setStream ] = useState()\n\tconst [ receivingCall, setReceivingCall ] = useState(false)\n\tconst [ caller, setCaller ] = useState(\"\")\n\tconst [ callerSignal, setCallerSignal ] = useState()\n\tconst [ callAccepted, setCallAccepted ] = useState(false)\n\tconst [ idToCall, setIdToCall ] = useState(\"\")\n\tconst [ callEnded, setCallEnded] = useState(false)\n\tconst [ name, setName ] = useState(\"\")\n\tconst myVideo = useRef()\n\tconst userVideo = useRef()\n\tconst connectionRef= useRef()\n\n\tuseEffect(() => {\n\t\tnavigator.mediaDevices.getUserMedia({ video: true, audio: true }).then((stream) => {\n\t\t\tsetStream(stream)\n\t\t\t\tmyVideo.current.srcObject = stream\n\t\t})\n\n\tsocket.on(\"me\", (id) => {\n\t\t\tsetMe(id)\n\t\t})\n\n\t\tsocket.on(\"callUser\", (data) => {\n\t\t\tsetReceivingCall(true)\n\t\t\tsetCaller(data.from)\n\t\t\tsetName(data.name)\n\t\t\tsetCallerSignal(data.signal)\n\t\t})\n\t}, [])\n\n\tconst callUser = (id) => {\n\t\tconst peer = new Peer({\n\t\t\tinitiator: true,\n\t\t\ttrickle: false,\n\t\t\tstream: stream\n\t\t})\n\t\tpeer.on(\"signal\", (data) => {\n\t\t\tsocket.emit(\"callUser\", {\n\t\t\t\tuserToCall: id,\n\t\t\t\tsignalData: data,\n\t\t\t\tfrom: me,\n\t\t\t\tname: name\n\t\t\t})\n\t\t})\n\t\tpeer.on(\"stream\", (stream) => {\n\t\t\t\n\t\t\t\tuserVideo.current.srcObject = stream\n\t\t\t\n\t\t})\n\t\tsocket.on(\"callAccepted\", (signal) => {\n\t\t\tsetCallAccepted(true)\n\t\t\tpeer.signal(signal)\n\t\t})\n\n\t\tconnectionRef.current = peer\n\t}\n\n\tconst answerCall =() =>  {\n\t\tsetCallAccepted(true)\n\t\tconst peer = new Peer({\n\t\t\tinitiator: false,\n\t\t\ttrickle: false,\n\t\t\tstream: stream\n\t\t})\n\t\tpeer.on(\"signal\", (data) => {\n\t\t\tsocket.emit(\"answerCall\", { signal: data, to: caller })\n\t\t})\n\t\tpeer.on(\"stream\", (stream) => {\n\t\t\tuserVideo.current.srcObject = stream\n\t\t})\n\n\t\tpeer.signal(callerSignal)\n\t\tconnectionRef.current = peer\n\t}\n\n\tconst leaveCall = () => {\n\t\tsetCallEnded(true)\n\t\tconnectionRef.current.destroy()\n\t}\n\n  const history = useHistory()\n\treturn (\n\t\t<Home />\n\t)\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}